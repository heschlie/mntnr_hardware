# -*- coding: utf-8 -*-
# Generated by Django 1.11.7 on 2018-02-16 16:04
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import enumfields.fields
import mntnr_hardware
import mountaineer.core.models
import mountaineer.core.utils.slug
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cabinet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', mountaineer.core.models.SlugField(db_index=True, default=mountaineer.core.utils.slug.slugid_nice, editable=False)),
                ('name', models.CharField(max_length=256)),
                ('rack_units', models.PositiveIntegerField(help_text='Height of rack in Rack Units')),
                ('posts', models.PositiveIntegerField(help_text='Number of posts in the rack (usually 4, sometimes 2)')),
                ('depth', models.DecimalField(blank=True, decimal_places=3, help_text='Distance from front to rear post (inches)', max_digits=6, null=True)),
                ('width', models.DecimalField(blank=True, decimal_places=3, help_text='Width (inches, usually 19.0)', max_digits=6, null=True)),
                ('attachment', enumfields.fields.EnumIntegerField(blank=True, enum=mntnr_hardware.CabinetAttachmentMethod, help_text='Hardware attachment method', null=True)),
                ('fasteners', enumfields.fields.EnumIntegerField(blank=True, enum=mntnr_hardware.CabinetFastener, help_text='Hardware fasteners in use', null=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CabinetAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', mountaineer.core.models.SlugField(db_index=True, default=mountaineer.core.utils.slug.slugid_nice, editable=False)),
                ('position', models.PositiveIntegerField(blank=True, null=True)),
                ('orientation', enumfields.fields.EnumIntegerField(blank=True, enum=mntnr_hardware.RackOrientation, null=True)),
                ('depth', enumfields.fields.EnumIntegerField(blank=True, enum=mntnr_hardware.RackDepth, null=True)),
                ('cabinet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mntnr_hardware.Cabinet')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Datacenter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', mountaineer.core.models.SlugField(db_index=True, default=mountaineer.core.utils.slug.slugid_nice, editable=False)),
                ('name', models.CharField(max_length=256)),
                ('vendor', models.CharField(max_length=256)),
                ('address', models.CharField(max_length=256)),
                ('noc_phone', models.CharField(blank=True, max_length=24)),
                ('noc_email', models.EmailField(blank=True, max_length=254)),
                ('noc_url', models.URLField(blank=True)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='NetworkDevice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', mountaineer.core.models.SlugField(db_index=True, default=mountaineer.core.utils.slug.slugid_nice, editable=False)),
                ('manufacturer', models.CharField(max_length=128)),
                ('model', models.CharField(max_length=128)),
                ('serial', models.CharField(max_length=256)),
                ('asset_id', models.CharField(blank=True, help_text='ID in external asset database, if any.', max_length=64)),
                ('asset_tag', models.CharField(blank=True, help_text='Asset tag, if any.', max_length=128)),
                ('rack_units', models.IntegerField(blank=True, help_text='Height of the device, in Rack Units', null=True)),
                ('draw', models.PositiveIntegerField(blank=True, help_text='Power draw of the device, in Watts', null=True)),
                ('ports', models.PositiveIntegerField(help_text='Number of ports available on the device')),
                ('speed', enumfields.fields.EnumIntegerField(enum=mntnr_hardware.SwitchSpeed)),
                ('interconnect', enumfields.fields.EnumIntegerField(enum=mntnr_hardware.SwitchInterconnect)),
                ('device', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='mntnr_hardware.Device')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PortAssignment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', mountaineer.core.models.SlugField(db_index=True, default=mountaineer.core.utils.slug.slugid_nice, editable=False)),
                ('device_port', models.PositiveIntegerField()),
                ('connected_device', models.ForeignKey(help_text='The device being connected.', on_delete=django.db.models.deletion.CASCADE, related_name='connected_device', to='mntnr_hardware.Device')),
                ('device', models.ForeignKey(help_text='The device (e.g. switch or pdu) being connected to.', on_delete=django.db.models.deletion.CASCADE, to='mntnr_hardware.Device')),
            ],
        ),
        migrations.CreateModel(
            name='PowerDistributionUnit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', mountaineer.core.models.SlugField(db_index=True, default=mountaineer.core.utils.slug.slugid_nice, editable=False)),
                ('manufacturer', models.CharField(max_length=128)),
                ('model', models.CharField(max_length=128)),
                ('serial', models.CharField(max_length=256)),
                ('asset_id', models.CharField(blank=True, help_text='ID in external asset database, if any.', max_length=64)),
                ('asset_tag', models.CharField(blank=True, help_text='Asset tag, if any.', max_length=128)),
                ('rack_units', models.IntegerField(blank=True, help_text='Height of the device, in Rack Units', null=True)),
                ('draw', models.PositiveIntegerField(blank=True, help_text='Power draw of the device, in Watts', null=True)),
                ('ports', models.PositiveIntegerField(help_text='Number of ports available on the device')),
                ('volts', models.PositiveIntegerField(help_text='Rated output voltage')),
                ('amps', models.PositiveIntegerField(help_text='Rated output amperage')),
                ('device', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='mntnr_hardware.Device')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Server',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', mountaineer.core.models.SlugField(db_index=True, default=mountaineer.core.utils.slug.slugid_nice, editable=False)),
                ('manufacturer', models.CharField(max_length=128)),
                ('model', models.CharField(max_length=128)),
                ('serial', models.CharField(max_length=256)),
                ('asset_id', models.CharField(blank=True, help_text='ID in external asset database, if any.', max_length=64)),
                ('asset_tag', models.CharField(blank=True, help_text='Asset tag, if any.', max_length=128)),
                ('rack_units', models.IntegerField(blank=True, help_text='Height of the device, in Rack Units', null=True)),
                ('draw', models.PositiveIntegerField(blank=True, help_text='Power draw of the device, in Watts', null=True)),
                ('memory', models.PositiveIntegerField(blank=True, help_text='Physical RAM in MiB', null=True)),
                ('cores', models.PositiveIntegerField(blank=True, help_text='Number of CPU cores', null=True)),
                ('device', models.OneToOneField(blank=True, editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, to='mntnr_hardware.Device')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='cabinetassignment',
            name='device',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='mntnr_hardware.Device'),
        ),
        migrations.AddField(
            model_name='cabinet',
            name='datacenter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mntnr_hardware.Datacenter'),
        ),
        migrations.AlterUniqueTogether(
            name='server',
            unique_together=set([('manufacturer', 'model', 'serial')]),
        ),
        migrations.AlterUniqueTogether(
            name='portassignment',
            unique_together=set([('device', 'device_port')]),
        ),
    ]
